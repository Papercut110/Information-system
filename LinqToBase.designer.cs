#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InformationSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InfoDB")]
	public partial class LinqToBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertEmploees(Emploees instance);
    partial void UpdateEmploees(Emploees instance);
    partial void DeleteEmploees(Emploees instance);
    partial void InsertDep(Dep instance);
    partial void UpdateDep(Dep instance);
    partial void DeleteDep(Dep instance);
    #endregion
		
		public LinqToBaseDataContext() : 
				base(global::InformationSystem.Properties.Settings.Default.InfoDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Emploees> Emploees
		{
			get
			{
				return this.GetTable<Emploees>();
			}
		}
		
		public System.Data.Linq.Table<Dep> Dep
		{
			get
			{
				return this.GetTable<Dep>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emploees")]
	public partial class Emploees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _SureName;
		
		private int _Age;
		
		private decimal _Salary;
		
		private int _Projects;
		
		private int _Department_id;
		
		private EntityRef<Dep> _Dep;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSureNameChanging(string value);
    partial void OnSureNameChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnSalaryChanging(decimal value);
    partial void OnSalaryChanged();
    partial void OnProjectsChanging(int value);
    partial void OnProjectsChanged();
    partial void OnDepartment_idChanging(int value);
    partial void OnDepartment_idChanged();
    #endregion
		
		public Emploees()
		{
			this._Dep = default(EntityRef<Dep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SureName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string SureName
		{
			get
			{
				return this._SureName;
			}
			set
			{
				if ((this._SureName != value))
				{
					this.OnSureNameChanging(value);
					this.SendPropertyChanging();
					this._SureName = value;
					this.SendPropertyChanged("SureName");
					this.OnSureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(18,0) NOT NULL")]
		public decimal Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projects", DbType="Int NOT NULL")]
		public int Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				if ((this._Projects != value))
				{
					this.OnProjectsChanging(value);
					this.SendPropertyChanging();
					this._Projects = value;
					this.SendPropertyChanged("Projects");
					this.OnProjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_id", DbType="Int NOT NULL")]
		public int Department_id
		{
			get
			{
				return this._Department_id;
			}
			set
			{
				if ((this._Department_id != value))
				{
					if (this._Dep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartment_idChanging(value);
					this.SendPropertyChanging();
					this._Department_id = value;
					this.SendPropertyChanged("Department_id");
					this.OnDepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_Emploees", Storage="_Dep", ThisKey="Department_id", OtherKey="Id", IsForeignKey=true)]
		public Dep Dep
		{
			get
			{
				return this._Dep.Entity;
			}
			set
			{
				Dep previousValue = this._Dep.Entity;
				if (((previousValue != value) 
							|| (this._Dep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dep.Entity = null;
						previousValue.Emploees.Remove(this);
					}
					this._Dep.Entity = value;
					if ((value != null))
					{
						value.Emploees.Add(this);
						this._Department_id = value.Id;
					}
					else
					{
						this._Department_id = default(int);
					}
					this.SendPropertyChanged("Dep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dep")]
	public partial class Dep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Departament;
		
		private EntitySet<Emploees> _Emploees;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDepartamentChanging(string value);
    partial void OnDepartamentChanged();
    #endregion
		
		public Dep()
		{
			this._Emploees = new EntitySet<Emploees>(new Action<Emploees>(this.attach_Emploees), new Action<Emploees>(this.detach_Emploees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departament", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Departament
		{
			get
			{
				return this._Departament;
			}
			set
			{
				if ((this._Departament != value))
				{
					this.OnDepartamentChanging(value);
					this.SendPropertyChanging();
					this._Departament = value;
					this.SendPropertyChanged("Departament");
					this.OnDepartamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dep_Emploees", Storage="_Emploees", ThisKey="Id", OtherKey="Department_id")]
		public EntitySet<Emploees> Emploees
		{
			get
			{
				return this._Emploees;
			}
			set
			{
				this._Emploees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emploees(Emploees entity)
		{
			this.SendPropertyChanging();
			entity.Dep = this;
		}
		
		private void detach_Emploees(Emploees entity)
		{
			this.SendPropertyChanging();
			entity.Dep = null;
		}
	}
}
#pragma warning restore 1591
